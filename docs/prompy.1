.TH PROMPY 1 "May 2025" "Prompy 0.1.0" "Prompy Manual"
.SH NAME
prompy \- build and manage prompts with reusable fragments
.SH SYNOPSIS
.B prompy
[\fIOPTIONS\fR] [\fICOMMAND\fR]
.SH DESCRIPTION
.B Prompy
is a command-line tool designed to help users build prompts for use with AI tools like Copilot or other LLM-based code helpers. It provides a templating system for creating reusable prompt fragments, opens an editor for user customization, and outputs the final prompt to stdout or directly to the clipboard.
.SH GLOBAL OPTIONS
.TP
.B \-\-version
Show version information and exit.
.TP
.B \-\-help
Show help message and exit.
.TP
.B \-\-debug
Enable debug logging for detailed error information.
.TP
.B \-\-language \fILANG\fR
Specify the language manually.
.TP
.B \-\-project \fIPROJECT\fR
Specify the project manually.
.TP
.B \-\-global, \-g
Use prompts not saved in the project directory.
.SH COMMANDS
.SS "Working with One-Off Prompts"
.TP
.B new [\fITEMPLATE_SLUG\fR]
Start a new prompt. If \fITEMPLATE_SLUG\fR is provided, use it as a template. Clears any existing cached prompt.
.TP
.B edit [\fIPROMPT_SLUG\fR]
Edit a prompt. If \fIPROMPT_SLUG\fR is provided, edit that prompt. Otherwise, edit the current one-off prompt.
.TP
.B out [\fIPROMPT_SLUG\fR] [\-\-file \fIFILE\fR] [\-\-pbcopy]
Output a prompt. If \fIPROMPT_SLUG\fR is provided, output that prompt. Otherwise, output the current one-off prompt. Use \-\-file to save to a file, or \-\-pbcopy to copy to clipboard.
.TP
.B pbcopy [\fIPROMPT_SLUG\fR]
Copy a prompt to the clipboard. If \fIPROMPT_SLUG\fR is provided, copy that prompt. Otherwise, copy the current one-off prompt.
.SS "Managing Reusable Prompts"
.TP
.B list [\-\-project \fIPROJECT\fR] [\-\-language \fILANG\fR] [\-\-category \fICATEGORY\fR] [\-\-format \fIFORMAT\fR]
List available prompts filtered by project, language, and category. Format can be 'simple' (just slugs) or 'detailed' (with descriptions).
.TP
.B save \fIPROMPT_SLUG\fR [\-\-description \fIDESC\fR] [\-\-category \fICAT\fR...] [\-\-force]
Save the current one-off prompt as a reusable prompt fragment. The \-\-force flag will overwrite existing prompts without confirmation.
.TP
.B mv \fISOURCE_SLUG\fR \fIDEST_SLUG\fR [\-\-force]
Move/rename a prompt from one location to another. The \-\-force flag will overwrite the destination if it exists without confirmation.
.TP
.B cp \fISOURCE_SLUG\fR \fIDEST_SLUG\fR [\-\-force]
Copy a prompt to a new location. The \-\-force flag will overwrite the destination if it exists without confirmation.
.TP
.B rm \fIPROMPT_SLUG\fR [\-\-force]
Remove a prompt. The \-\-force flag will bypass the confirmation prompt.
.SS "Configuration and Utilities"
.TP
.B detections [\-\-validate]
Edit language detection rules by opening the detections.yaml file in your editor. The \-\-validate flag will validate the file format without opening the editor.
.TP
.B completions \fISHELL\fR [\-\-output \fIFILE\fR]
Generate shell completion script. SHELL must be one of: bash, zsh, or fish.
.SH PROMPT FRAGMENTS
Prompt fragments are stored as markdown files with YAML frontmatter:
.PP
.nf
---
description: A description of the prompt
categories: [category1, category2]
arguments:
  arg1: Description of the first argument
  arg2: Description of the second argument (optional)
---

# Markdown content goes here

This is a template that can use {{arg1}} and {{arg2}} variables.
.fi
.PP
Reference other fragments using the @fragment-name syntax:
.PP
.nf
@fragments/common-header(project="MyProject")

# Main content here

@fragments/code-example(language="python")
.fi
.SH FILES
.TP
.I $PROMPY_CONFIG_DIR/prompts/
Global prompt fragments directory.
.TP
.I $PROMPY_CONFIG_DIR/cache/
Cache for one-off prompts.
.TP
.I $PROMPY_CONFIG_DIR/detections.yaml
Language detection rules.
.TP
.I $PROJECT_DIR/.prompts/
Project-specific prompt fragments.
.SH ENVIRONMENT
.TP
.B PROMPY_CONFIG_DIR
Directory where Prompy stores its configuration files. If not set, defaults to ~/.config/prompy.
.TP
.B EDITOR
The editor to use for editing prompts. If not set, falls back to common editors.
.SH EXAMPLES
.TP
Create a new prompt:
.B prompy new
.TP
Edit the current prompt:
.B prompy edit
.TP
Copy the current prompt to clipboard:
.B prompy pbcopy
.TP
List all available prompts:
.B prompy list
.TP
Save the current prompt as a reusable fragment:
.B prompy save fragments/my-prompt --description "A useful prompt" --category code
.TP
Generate bash completion scripts:
.B prompy completions bash > ~/.bashrc.d/prompy-completion.bash
.SH BUGS
Please report any bugs to the GitHub issue tracker.
.SH AUTHOR
Created and maintained by the Prompy contributors.
.SH "SEE ALSO"
Full documentation is available in the README.md file and at https://github.com/yourusername/prompy
